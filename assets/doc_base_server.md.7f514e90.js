import{_ as s,c as n,o as a,a as t}from"./app.263436ba.js";const g='{"title":"\u548C\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u524D\u7AEF\u8BF7\u6C42\u6D41\u7A0B","slug":"\u524D\u7AEF\u8BF7\u6C42\u6D41\u7A0B"},{"level":2,"title":"request.ts","slug":"request-ts"},{"level":2,"title":"\u4E00\u4E2A\u8BF7\u6C42\u793A\u4F8B","slug":"\u4E00\u4E2A\u8BF7\u6C42\u793A\u4F8B"},{"level":2,"title":"\u8BBE\u7F6E\u591A\u4E2A baseURL","slug":"\u8BBE\u7F6E\u591A\u4E2A-baseurl"}],"relativePath":"doc/base/server.md"}',p={},o=t(`<h1 id="\u548C\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92" tabindex="-1">\u548C\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92 <a class="header-anchor" href="#\u548C\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92" aria-hidden="true">#</a></h1><h2 id="\u524D\u7AEF\u8BF7\u6C42\u6D41\u7A0B" tabindex="-1">\u524D\u7AEF\u8BF7\u6C42\u6D41\u7A0B <a class="header-anchor" href="#\u524D\u7AEF\u8BF7\u6C42\u6D41\u7A0B" aria-hidden="true">#</a></h2><p>\u5728 vue3-antd-admin \u4E2D\uFF0C\u4E00\u4E2A\u5B8C\u6574\u7684\u524D\u7AEF UI \u4EA4\u4E92\u5230\u670D\u52A1\u7AEF\u5904\u7406\u6D41\u7A0B\u662F\u8FD9\u6837\u7684\uFF1A</p><ol><li>UI \u7EC4\u4EF6\u4EA4\u4E92\u64CD\u4F5C\uFF1B</li><li>\u8C03\u7528\u7EDF\u4E00\u7BA1\u7406\u7684 api service \u8BF7\u6C42\u51FD\u6570\uFF1B</li><li>\u4F7F\u7528\u5C01\u88C5\u7684 request.js \u53D1\u9001\u8BF7\u6C42\uFF1B</li><li>\u83B7\u53D6\u670D\u52A1\u7AEF\u8FD4\u56DE\uFF1B</li><li>\u66F4\u65B0 data\uFF1B</li></ol><p>\u4ECE\u4E0A\u9762\u7684\u6D41\u7A0B\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E3A\u4E86\u65B9\u4FBF\u7BA1\u7406\u7EF4\u62A4\uFF0C\u7EDF\u4E00\u7684\u8BF7\u6C42\u5904\u7406\u90FD\u653E\u5728 @/services/modules \u6587\u4EF6\u5939\u4E2D\uFF0C\u5E76\u4E14\u6309\u7167\u529F\u80FD\u8FDB\u884C\u62C6\u5206\u6A21\u5757\uFF0C\u5982\uFF1A</p><div class="language-shell"><pre><code>services/modules/
  login.js
  <span class="token punctuation">..</span>.
</code></pre></div><h2 id="request-ts" tabindex="-1">request.ts <a class="header-anchor" href="#request-ts" aria-hidden="true">#</a></h2><p>\u5176\u4E2D\uFF0C<code>@/services/axios-interceptors.ts</code>\xA0\u662F\u57FA\u4E8E\xA0<a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">axios\xA0()</a>\u7684\u5C01\u88C5\uFF0C\u4FBF\u4E8E\u7EDF\u4E00\u5904\u7406 POST\uFF0CGET \u7B49\u8BF7\u6C42\u53C2\u6570\uFF0C\u8BF7\u6C42\u5934\uFF0C\u4EE5\u53CA\u9519\u8BEF\u63D0\u793A\u4FE1\u606F\u7B49 \u5B83\u5C01\u88C5\u4E86\u5168\u5C40\xA0<code>request\u62E6\u622A\u5668</code>\u3001<code>response\u62E6\u622A\u5668</code>\u3001<code>\u7EDF\u4E00\u7684\u9519\u8BEF\u5904\u7406</code>\u3001<code>\u7EDF\u4E00\u505A\u4E86\u8D85\u65F6\u5904\u7406</code>\u3001<code>baseURL</code>\u8BBE\u7F6E\u7B49\u3002</p><h2 id="\u4E00\u4E2A\u8BF7\u6C42\u793A\u4F8B" tabindex="-1">\u4E00\u4E2A\u8BF7\u6C42\u793A\u4F8B <a class="header-anchor" href="#\u4E00\u4E2A\u8BF7\u6C42\u793A\u4F8B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">// services/modules/login.ts</span>
<span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;@/services/axios-interceptors&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoginFrom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types/views/login&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ResponseData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types/api/public&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoginSuccess<span class="token punctuation">,</span> UserInfo<span class="token punctuation">,</span> RouterData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types/api/login&#39;</span>
<span class="token keyword">import</span> url <span class="token keyword">from</span> <span class="token string">&#39;../url&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">ConfigType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">=</span>ResponseData<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>

<span class="token comment">/**
 * @desc: \u767B\u5F55
 * @param { Object } data \u8F93\u5165\u7684\u8D26\u53F7\u5BC6\u7801
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> login <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> LoginFrom<span class="token punctuation">)</span><span class="token operator">:</span> ConfigType<span class="token operator">&lt;</span>LoginSuccess<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> url<span class="token punctuation">.</span>login<span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    data
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// views/example/list</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> api <span class="token keyword">from</span> <span class="token string">&#39;@/services/modules/login&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  setup<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> listLoading <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      api<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token punctuation">.</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="\u8BBE\u7F6E\u591A\u4E2A-baseurl" tabindex="-1">\u8BBE\u7F6E\u591A\u4E2A baseURL <a class="header-anchor" href="#\u8BBE\u7F6E\u591A\u4E2A-baseurl" aria-hidden="true">#</a></h2><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<a href="https://vitejs.cn/guide/env-and-mode.html" target="_blank" rel="noopener noreferrer">\u73AF\u5883\u53D8\u91CF</a>\u8BBE\u7F6E\u591A\u4E2AbaseURL\uFF0C\u4ECE\u800C\u8BF7\u6C42\u4E0D\u540C\u7684 api \u5730\u5740\u3002</p><div class="language-shell"><pre><code><span class="token comment"># .env.development</span>
VITE_APP_BASE_API <span class="token operator">=</span> <span class="token string">&#39;/dev-api&#39;</span> <span class="token comment">#\u6CE8\u5165\u672C\u5730 api \u7684\u6839\u8DEF\u5F84</span>
VITE_APP_BASE_API2 <span class="token operator">=</span> <span class="token string">&#39;/dev-api2&#39;</span> <span class="token comment">#\u6CE8\u5165\u672C\u5730 api2 \u7684\u6839\u8DEF\u5F84</span>

</code></pre></div><p>\u4E4B\u540E\u6839\u636E\u73AF\u5883\u53D8\u91CF\u521B\u5EFAaxios\u5B9E\u4F8B\uFF0C\u8BA9\u5B83\u5177\u6709\u4E0D\u540C\u7684baseURL\u3002</p><div class="language-ts"><pre><code><span class="token comment">// create an axios instance</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  baseURL<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_APP_BASE_API</span><span class="token punctuation">,</span> <span class="token comment">// api \u7684 base_url</span>
  timeout<span class="token operator">:</span> <span class="token number">5000</span> <span class="token comment">// request timeout</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> service2 <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  baseURL<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_APP_BASE_API2</span><span class="token punctuation">,</span> <span class="token comment">// api2 \u7684 base_url</span>
  timeout<span class="token operator">:</span> <span class="token number">5000</span> <span class="token comment">// request timeout</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><p>\u6216\u8005</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> fetchList <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">:</span> ConfigType<span class="token operator">&lt;</span>TableList<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> baseUrl <span class="token operator">+</span> <span class="token string">&#39;/article/list&#39;</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    params<span class="token punctuation">,</span>
    baseURL<span class="token operator">:</span> <span class="token string">&#39;xxxx&#39;</span> <span class="token comment">// \u76F4\u63A5\u901A\u8FC7\u8986\u76D6\u7684\u65B9\u5F0F</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,17),e=[o];function c(l,r,i,k,u,d){return a(),n("div",null,e)}var h=s(p,[["render",c]]);export{g as __pageData,h as default};
